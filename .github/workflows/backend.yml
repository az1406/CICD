name: Backend CI/CD

on:
  push:
    branches:
      - main
      - deploy

jobs:
  linting:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: http://18.204.164.224:9000
        with:
          projectBaseDir: ./backend
          args: >
            -Dsonar.projectKey=secret-notes-backend

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Test (Code & Dependencies)
        working-directory: ./backend
        run: snyk test --all-projects

  build:
    needs: linting
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/secret-notes-backend:latest

  deliver:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/secret-notes-backend:latest

  deploy:
    needs: deliver
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy'
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 18.204.164.224
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker network create secret-notes-network || true
            docker rm -f secret-notes-backend || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/secret-notes-backend:latest
            docker run -d \
              --name secret-notes-backend \
              --network secret-notes-network \
              --network-alias backend \
              -e NODE_ENV=production \
              -e NODE_TLS_REJECT_UNAUTHORIZED=0 \
              -e DATABASE_URL=postgres://postgres:postgres@secret-notes-db.ci4bvrmai3fb.us-east-1.rds.amazonaws.com:5432/secret_notes?sslmode=require \
              -p 3000:3000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/secret-notes-backend:latest

